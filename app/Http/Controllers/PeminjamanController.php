<?php

namespace App\Http\Controllers;

use App\Models\Anggota;
use App\Models\Buku;
use App\Models\DetailPeminjaman;
use App\Models\Peminjaman;
use Illuminate\Http\Request;

class PeminjamanController extends Controller
{

    public function index()
    {
        $pageName = "FISKOM Library System - Peminjaman Buku";
        $navbarType = "navbar_filled";
        $menu = "proses.peminjaman";
        $anggotas = Anggota::all();
        $bukus = Buku::all();
        $dateNow = date('Y-m-d');
        return view ('dashboard.dashboard', ['pageName' => $pageName, 'navbarType' => $navbarType, 'menu'=>$menu, 'anggotas'=>$anggotas, 'dateNow'=>$dateNow, 'bukus'=>$bukus]);


    }

    public function bookReturn(){
        $pageName = "FISKOM Library System - Pengembalian Buku";
        $navbarType = "navbar_filled";
        $pinjamans = Peminjaman::with("detailPeminjamans")->get();
        foreach($pinjamans as $pinjaman){
            foreach($pinjaman->detailPeminjamans as $detailPeminjaman){
                dd($detailPeminjaman);
            }

        }
        $menu = "proses.pengembalian";
        return view ('dashboard.dashboard', ['pageName' => $pageName, 'navbarType' => $navbarType, 'menu'=>$menu]);

    }

    public function create()
    {
    }

  
    public function store(Request $request)
    {
        $data = $request->validate([
            'id_anggota' => 'required',
            'tgl_peminjaman' => 'date|required|after_or_equal:today',
            'tgl_kembali' => 'date|required|after_or_equal:today'
        ]);

        if($request->id_buku == null){
            return redirect('/pinjam')->with('errorNoBook', 'Data Buku Pinjaman Tidak Boleh Kosong');
        }

        $autoGeneratedCode = "P-".$this->generateRandomString();
        $peminjamanData = Peminjaman::create([
            'id_anggota' => $data['id_anggota'],
            'peminjaman_autocode' => $autoGeneratedCode,
            'peminjaman_tgl_peminjaman' => $data['tgl_peminjaman'],
            'peminjaman_tgl_pengembalian' => $data['tgl_kembali'],
            'status' => 1,
        ]);

        $books = $request->id_buku;
        foreach($books as $book){
            DetailPeminjaman::create([
                'id_peminjaman' => $peminjamanData->id,
                'id_buku' => $book
            ]);
        }


        return redirect('/pinjam')->with('success', 'Peminjaman Buku berhasil ditambahkan');
        


    }

    /**
     * Display the specified resource.
     */
    public function show(Peminjaman $peminjaman)
    {
        //
    }

    /**
     * Show the form for editing the specified resource.
     */
    public function edit(Peminjaman $peminjaman)
    {
        //
    }

    /**
     * Update the specified resource in storage.
     */
    public function update(Request $request, Peminjaman $peminjaman)
    {
        //
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy(Peminjaman $peminjaman)
    {
        //
    }
}
